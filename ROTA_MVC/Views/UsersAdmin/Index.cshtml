@model IEnumerable<ROTA_MVC.Models.UserDetailDto>

@{
    ViewData["Title"] = "Manage Users";
}

<h1>Manage Users</h1>
<p>Manage user accounts, roles, and activation status.</p>


@if (TempData["ErrorMessage"] != null)
{
     <div class="alert alert-danger alert-dismissible fade show">@TempData["ErrorMessage"]<button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>
}

@* Optional: Link to Register User page (currently in AuthController) *@
@* <p> <a asp-controller="Auth" asp-action="Register" class="btn btn-primary"><i class="bi bi-person-plus-fill me-1"></i>Register New User</a> </p> *@


<table class="table table-striped table-hover table-sm">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            <th>
                Employee Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RoleName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastLogin)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr><td colspan="6" class="text-center">No users found.</td></tr>
        }
        @foreach (var item in Model)
        {
            <tr class="@(item.IsActive ? "" : "table-secondary text-muted")">
                @* Style inactive users *@
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeFullName)
                    <small class="d-block text-muted">(ID: @item.EmployeeId)</small>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoleName)
                </td>
                <td>
                    @if (item.IsActive)
                    {
                        <span class="badge bg-success">Active</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Inactive</span>
                    }
                </td>
                <td>
                    @(item.LastLogin.HasValue ? item.LastLogin.Value.ToLocalTime().ToString("g") : "Never")
                </td>
                <td>
                    <div class="btn-group btn-group-sm" role="group">
                        <a asp-action="Details" asp-route-userId="@item.UserId" class="btn btn-info" title="Details"><i class="bi bi-info-circle"></i></a>
                        <a asp-action="EditRole" asp-route-userId="@item.UserId" class="btn btn-secondary" title="Edit Role"><i class="bi bi-person-badge"></i></a>
                        <a asp-action="EditStatus" asp-route-userId="@item.UserId" class="btn btn-warning" title="@(item.IsActive ? "Deactivate" : "Activate")"><i class="bi bi-lightbulb-@(item.IsActive ? "off" : "fill")"></i></a>
                        @* Delete User action often tied to deleting Employee - handle with caution if adding *@
                        @* <a asp-action="Delete" asp-route-userId="@item.UserId" class="btn btn-danger" title="Delete User"><i class="bi bi-trash3"></i></a> *@
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>